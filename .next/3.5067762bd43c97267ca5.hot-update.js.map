{"version":3,"sources":["webpack:///./src/worldmap.js?e95a"],"names":["BarChart","props","createWordMap","bind","colorVariable","geoIDVariable","format","d3","tip","attr","offset","html","d","properties","name","direction","select","style","parentWidth","node","getBoundingClientRect","width","margin","top","right","bottom","left","height","color","scaleQuantile","range","svg","append","projection","geoRobinson","scale","rotate","translate","path","geoPath","call","queue","defer","json","tsv","await","ready","error","geography","data","forEach","Number","replace","colorVariableValueByID","features","id","numberOfClasses","length","ckmeansClusters","ss","ckmeans","map","ckmeansBreaks","min","console","log","domain","selectAll","enter","on","show","hide","datum","topojson","mesh","a","b","WordMap"],"mappings":"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","file":"3.5067762bd43c97267ca5.hot-update.js","sourcesContent":["import React, { Component } from 'react'\r\n//import './App.css'\r\n/*import { scaleLinear } from 'd3-scale'\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\n*/\r\nimport {d3} from 'd3'\r\nimport {queue} from 'd3-queue'\r\n//import 'src/topojson.v1.min.js'\r\nimport {d3geo} from 'd3-geo-projection'\r\nimport {tip} from 'd3-tip'\r\n//import 'src/simple-statistics.min.js'\r\n//import {babelstandalone} from 'babel-standalone'\r\n\r\n/*\r\n<script src=\"http://d3js.org/d3.v4.min.js\"></script>\r\n<script src=\"http://d3js.org/queue.v1.min.js\"></script>\r\n<script src=\"http://d3js.org/topojson.v1.min.js\"></script>\r\n<script src=\"https://d3js.org/d3-geo-projection.v1.min.js\"></script>\r\n<script src=\"d3-tip.js\"></script>\r\n<script src='https://unpkg.com/simple-statistics@2.0.0/dist/simple-statistics.min.js'></script>\r\n<script src='https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.10.3/babel.min.js'></script>\r\n*/\r\n\r\nclass BarChart extends Component {\r\n   constructor(props){\r\n      super(props)\r\n      this.createWordMap = this.createWordMap.bind(this)\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.createWordMap()\r\n   }\r\n\r\n   componentDidUpdate() {\r\n      this.createWordMap()\r\n   }\r\n\r\n   createWordMap() {\r\n\r\n\r\n          // configuration\r\n          const colorVariable = 'population';\r\n          const geoIDVariable = 'id';\r\n          const format = d3.format(',');\r\n\r\n          // Set tooltips\r\n          const tip = d3.tip()\r\n            .attr('class', 'd3-tip')\r\n            .offset([-10, 0])\r\n            .html(d => `<strong>Country: </strong><span class='details'>${d.properties.name}<br></span><strong>Population: </strong><span class='details'>${format(d[colorVariable])}</span>`);\r\n\r\n          tip.direction(function(d) {\r\n            if (d.properties.name === 'Antarctica') return 'n';\r\n            // Americas\r\n            if (d.properties.name === 'Greenland') return 's';\r\n            if (d.properties.name === 'Canada') return 'e';\r\n            if (d.properties.name === 'USA') return 'e';\r\n            if (d.properties.name === 'Mexico') return 'e';\r\n            // Europe\r\n            if (d.properties.name === 'Iceland') return 's';\r\n            if (d.properties.name === 'Norway') return 's';\r\n            if (d.properties.name === 'Sweden') return 's';\r\n            if (d.properties.name === 'Finland') return 's';\r\n            if (d.properties.name === 'Russia') return 'w';\r\n            // Asia\r\n            if (d.properties.name === 'China') return 'w';\r\n            if (d.properties.name === 'Japan') return 's';\r\n            // Oceania\r\n            if (d.properties.name === 'Indonesia') return 'w';\r\n            if (d.properties.name === 'Papua New Guinea') return 'w';\r\n            if (d.properties.name === 'Australia') return 'w';\r\n            if (d.properties.name === 'New Zealand') return 'w';\r\n            // otherwise if not specified\r\n            return 'n';\r\n          })\r\n\r\n          tip.offset(function(d) { // [top, left]\r\n            if (d.properties.name === 'Antarctica') return [0, 0];\r\n            // Americas\r\n            if (d.properties.name === 'Greenland') return [10, -10];\r\n            if (d.properties.name === 'Canada') return [24, -28];\r\n            if (d.properties.name === 'USA') return [-5, 8];\r\n            if (d.properties.name === 'Mexico') return [12, 10];\r\n            if (d.properties.name === 'Chile') return [0, -15];\r\n            // Europe\r\n            if (d.properties.name === 'Iceland') return [15, 0];\r\n            if (d.properties.name === 'Norway') return [10, -28];\r\n            if (d.properties.name === 'Sweden') return [10, -8];\r\n            if (d.properties.name === 'Finland') return [10, 0];\r\n            if (d.properties.name === 'France') return [-9, 66];\r\n            if (d.properties.name === 'Italy') return [-8, -6];\r\n            if (d.properties.name === 'Russia') return [5, 385];\r\n            // Africa\r\n            if (d.properties.name === 'Madagascar') return [-10, 10];\r\n            // Asia\r\n            if (d.properties.name === 'China') return [-16, -8];\r\n            if (d.properties.name === 'Mongolia') return [-5, 0];\r\n            if (d.properties.name === 'Pakistan') return [-10, 13];\r\n            if (d.properties.name === 'India') return [-11, -18];\r\n            if (d.properties.name === 'Nepal') return [-8, 1];\r\n            if (d.properties.name === 'Myanmar') return [-12, 0];\r\n            if (d.properties.name === 'Laos') return [-12, -8];\r\n            if (d.properties.name === 'Vietnam') return [-12, -4];\r\n            if (d.properties.name === 'Japan') return [5, 5];\r\n            // Oceania\r\n            if (d.properties.name === 'Indonesia') return [0, -5];\r\n            if (d.properties.name === 'Papua New Guinea') return [-5, -10];\r\n            if (d.properties.name === 'Australia') return [-15, 0];\r\n            if (d.properties.name === 'New Zealand') return [-15, 0];\r\n            // otherwise if not specified\r\n            return [-10, 0];\r\n          })\r\n\r\n          d3.select('body')\r\n              .style('overflow', 'hidden');\r\n\r\n          const parentWidth = d3.select('body').node().getBoundingClientRect().width;\r\n          const margin = {top: 0, right: 0, bottom: 0, left: 0};\r\n          const width = 960 - margin.left - margin.right;\r\n          const height = 500 - margin.top - margin.bottom;\r\n\r\n          const color = d3.scaleQuantile()\r\n            .range([\r\n              'rgb(247,251,255)',\r\n              'rgb(222,235,247)',\r\n              'rgb(198,219,239)',\r\n              'rgb(158,202,225)',\r\n              'rgb(107,174,214)',\r\n              'rgb(66,146,198)',\r\n              'rgb(33,113,181)',\r\n              'rgb(8,81,156)',\r\n              'rgb(8,48,107)',\r\n              'rgb(3,19,43)'\r\n            ]);\r\n\r\n\r\n          const svg = d3.select('body')\r\n            .append('svg')\r\n            .attr('width', width)\r\n            .attr('height', height)\r\n            .append('g')\r\n            .attr('class', 'map');\r\n\r\n          const projection = d3.geoRobinson()\r\n            .scale(148)\r\n            .rotate([352, 0, 0])\r\n            .translate( [width / 2, height / 2]);\r\n\r\n          const path = d3.geoPath().projection(projection);\r\n\r\n          svg.call(tip);\r\n\r\n          queue()\r\n            .defer(d3.json, 'world_countries.json')\r\n            .defer(d3.tsv, 'world_population.tsv')\r\n            .await(ready);\r\n\r\n          function ready(error, geography, data) {\r\n            data.forEach(d => {\r\n              d[colorVariable] = Number(d[colorVariable].replace(',', ''));\r\n            })\r\n\r\n            const colorVariableValueByID = {};\r\n\r\n            data.forEach(d => { colorVariableValueByID[d[geoIDVariable]] = d[colorVariable]; });\r\n            geography.features.forEach(d => { d[colorVariable] = colorVariableValueByID[d.id] });\r\n\r\n            // calculate ckmeans clusters\r\n            // then use the max value of each cluster\r\n            // as a break\r\n            const numberOfClasses = color.range().length - 1;\r\n            const ckmeansClusters = ss.ckmeans(data.map(d => d[colorVariable]), numberOfClasses);\r\n            const ckmeansBreaks = ckmeansClusters.map(d => d3.min(d));\r\n            console.log('numberOfClasses', numberOfClasses);\r\n            console.log('ckmeansClusters', ckmeansClusters);\r\n            console.log('ckmeansBreaks', ckmeansBreaks);\r\n\r\n            // set the domain of the color scale based on our data\r\n            color\r\n              .domain(ckmeansBreaks);\r\n            //\r\n            // .domain(jenksNaturalBreaks)\r\n            //\r\n            // .domain(d3.extent(data, d => d[colorVariable]));\r\n            //\r\n            // .domain([\r\n            //   10000,\r\n            //   100000,\r\n            //   500000,\r\n            //   1000000,\r\n            //   5000000,\r\n            //   10000000,\r\n            //   50000000,\r\n            //   100000000,\r\n            //   500000000,\r\n            //   1500000000\r\n            // ]);\r\n\r\n            svg.append('g')\r\n              .attr('class', 'countries')\r\n              .selectAll('path')\r\n              .data(geography.features)\r\n              .enter().append('path')\r\n                .attr('d', path)\r\n                .style('fill', d => {\r\n                  if (typeof colorVariableValueByID[d.id] !== 'undefined') {\r\n                    return color(colorVariableValueByID[d.id])\r\n                  }\r\n                  return 'white'\r\n                })\r\n                .style('fill-opacity',0.8)\r\n                .style('stroke', d => {\r\n                    if (d[colorVariable] !== 0) {\r\n                    return 'white';\r\n                  }\r\n                  return 'lightgray';\r\n                })\r\n                .style('stroke-width', 1)\r\n                .style('stroke-opacity', 0.5)\r\n                // tooltips\r\n                .on('mouseover',function(d){\r\n                  tip.show(d);\r\n                  d3.select(this)\r\n                    .style('fill-opacity', 1)\r\n                    .style('stroke-opacity', 1)\r\n                    .style('stroke-width', 2)\r\n                })\r\n                .on('mouseout', function(d){\r\n                  tip.hide(d);\r\n                  d3.select(this)\r\n                    .style('fill-opacity', 0.8)\r\n                    .style('stroke-opacity', 0.5)\r\n                    .style('stroke-width', 1)\r\n                });\r\n\r\n            svg.append('path')\r\n              .datum(topojson.mesh(geography.features, (a, b) => a.id !== b.id))\r\n              .attr('class', 'names')\r\n              .attr('d', path);\r\n          }\r\n   }\r\n\r\n\r\n\r\n\r\n\r\nrender() {\r\n      return <svg ref={node => this.node = node}\r\n      width={500} height={500}>\r\n      </svg>\r\n   }\r\n}\r\nexport default WordMap\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/worldmap.js"],"sourceRoot":""}